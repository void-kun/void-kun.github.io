{"version":3,"file":"static/js/708.56378178.chunk.js","mappings":"qJAkCA,UA1BiB,WACf,OAAgCA,EAAAA,EAAAA,UAA8B,IAAG,eAA1DC,EAAQ,KAAEC,EAAW,KAS5B,OAPAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAOC,EAAQ,MACrBH,EAAYE,EACG,CAAf,MAAOE,GAAQ,CACnB,GAAG,KAGD,gBAAKC,UAAU,wBAAuB,SACnCN,EAASO,OAAS,GACjBP,EAASQ,KAAI,SAACC,GAAC,OACb,UAAC,KAAI,CAEHH,UAAU,2DACVI,GAAE,sBAAiBD,EAAEE,MAAO,UAC7B,IACGF,EAAEG,OAJCH,EAAEE,KAKF,KAIjB,C,kICCA,EA7BiB,SAACE,GAChB,OACE,gBAAKP,UAAU,+BAA8B,UAC3C,iBAAKA,UAAU,sCAAqC,WAClD,iBAAMA,UAAU,yCAAwC,SAAEO,EAAMC,aAChE,iBAAKR,UAAU,gBAAe,WAC5B,SAAC,KAAI,CACHA,UAAU,sDACVI,GAAE,iBAAYG,EAAME,MAAO,SAE1BF,EAAMG,QAERH,EAAMI,YACLJ,EAAMI,WAAWT,KAAI,SAACR,GAAQ,OAC5B,UAAC,KAAI,CACHU,GAAE,sBAAiBV,EAASW,MAE5BL,UAAU,kCAAiC,UAC5C,IACGN,EAASY,OAAI,UAHPC,EAAME,KAAI,YAAIf,EAASW,MAI1B,KAEX,cAAGL,UAAU,oCAAmC,SAAEO,EAAMK,iBAKlE,E,UCWA,EA7Ba,WACX,OAAkCnB,EAAAA,EAAAA,UAA8B,IAAG,eAA5DoB,EAAS,KAAEC,EAAY,KACtBL,GAASM,EAAAA,EAAAA,MAATN,KAiBR,OAfAb,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAOC,EAAQ,IAErB,IAAKW,EAEH,YADAK,EAAajB,GAGf,IAAMgB,EAAYhB,EAAKmB,QAAO,SAACC,GAC7B,QAASA,EAAKN,WAAWO,MAAK,SAACC,GAAI,OAAKA,EAAKd,OAASI,CAAI,GAC5D,IACAK,EAAaD,EACE,CAAf,MAAOd,GAAQ,CACnB,GAAG,CAACU,KAGF,iBAAKT,UAAU,yBAAwB,WACrC,SAAC,UAAQ,KACT,gBAAKA,UAAU,+CAA8C,SAC1Da,GAAaA,EAAUX,KAAI,SAACkB,GAAI,OAAK,SAAC,GAAQ,UAAqBA,GAAfA,EAAKX,KAAkB,QAIpF,C","sources":["pages/Category.page.tsx","components/postcard/index.tsx","pages/Post.page.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport type CategoryType = {\n  name: string;\n  path: string;\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState<Array<CategoryType>>([]);\n\n  useEffect(() => {\n    try {\n      const data = require('./../markdown/categories.json');\n      setCategory(data);\n    } catch (error) {}\n  }, []);\n\n  return (\n    <div className='w-full flex flex-wrap'>\n      {category.length > 0 &&\n        category.map((c) => (\n          <Link\n            key={c.path}\n            className=\"text-brown-dark font-normal text-lg mr-4 hover:underline\"\n            to={`/categories/${c.path}`}\n          >\n            #{c.name}\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nexport default Category;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PostCardType } from '../../pages/Post.page';\n\nconst PostCard = (props: PostCardType) => {\n  return (\n    <div className=\"pt-3 pb-3 break-inside-avoid\">\n      <div className=\"flex flex-col md:gap-8  md:flex-row\">\n        <span className=\"text-sm text-text-light min-w-fit pt-1\">{props.timestamp}</span>\n        <div className=\"flex flex-col\">\n          <Link\n            className=\"text-text font-medium text-lg hover:text-brown-dark\"\n            to={`/posts/${props.slug}`}\n          >\n            {props.title}\n          </Link>\n          {props.categories &&\n            props.categories.map((category) => (\n              <Link\n                to={`/categories/${category.path}`}\n                key={`${props.slug}_${category.path}`}\n                className=\"text-brown-dark hover:underline\"\n              >\n                #{category.name}\n              </Link>\n            ))}\n          <p className=\"text-[#AAA] font-medium text-base\">{props.summary}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PostCard from '../components/postcard';\nimport Category, { CategoryType } from './Category.page';\n\nexport type PostCardType = {\n  timestamp: string;\n  title: string;\n  slug: string;\n  summary: string;\n  categories: Array<CategoryType>;\n};\n\nconst Post = () => {\n  const [postCards, setPostCards] = useState<Array<PostCardType>>([]);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    try {\n      const data = require('./../markdown/posts.json');\n\n      if (!slug) {\n        setPostCards(data);\n        return;\n      }\n      const postCards = data.filter((post: PostCardType) => {\n        return !!post.categories.find((cate) => cate.path === slug);\n      });\n      setPostCards(postCards);\n    } catch (error) {}\n  }, [slug]);\n\n  return (\n    <div className=\"w-full overflow-hidden\">\n      <Category />\n      <div className=\"columns-1 2xl:columns-3 lg:columns-2 gap-x-4\">\n        {postCards && postCards.map((card) => <PostCard key={card.slug} {...card} />)}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"],"names":["useState","category","setCategory","useEffect","data","require","error","className","length","map","c","to","path","name","props","timestamp","slug","title","categories","summary","postCards","setPostCards","useParams","filter","post","find","cate","card"],"sourceRoot":""}